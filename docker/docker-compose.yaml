---
version: "3.7"

services:

  portainer:
    image: portainer/portainer-ee:latest
    ports:
      - "9000:9000"
    container_name: portainer
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.ouroboros.enable=true"
      - "traefik.enable=false"
    networks:
      - docker
    volumes:
      - ./portainer/data:/data #map named volume to directory in container
      - /var/run/docker.sock:/var/run/docker.sock ###Comment this line out in Windows
      - /etc/localtime:/etc/localtime:ro
    restart: always
    
  auto-updater:
    image: pyouroboros/ouroboros:latest
    hostname: ouroboros-gandalf
    container_name: ouroboros
    restart: always
    networks:
      - docker
    environment:
      -  TZ=TZ=${TZ}
    #For a full list of options for ouroboros, see https://github.com/pyouroboros/ouroboros/wiki/Usage
      - CLEANUP=true #delete old images after update
      - DOCKER_SOCKETS="unix://var/run/docker.sock" #comment this line out on windows
      #- DOCKER_SOCKETS="npipe:////./pipe/docker_engine tcp://localhost:2375" #uncomment this line on windows
      # Define how often to check for updates, defaults to a minimum of 300 (30 seconds)
      - INTERVAL=300
      - LOG_LEVEL=info
      #make ouroboros self-updating
      - SELF_UPDATE=true
      #get auto-update config from labels and only labels.  If a container is not labeled to auto update, don't autoupdate
      - LABEL_ENABLE=true
      - LABELS_ONLY=true
      - NOTIFIERS=
       #optional alternative way to check interval (overriding INTERVAL)
      #Specify how often to check for updates using a cron string (see https://devhints.io/cron)
      #this string means every 30 minutes of every hour of every day of every month at every day of the week
      - CRON="*/30 * * * *"
    labels:
      - "traefik.enable=false"
      - "com.ouroboros.enable=true" #Yes, it can watch and update itself
    #Docker images are a base file system with deltas (changes) representing the steps to go from a base to the
    #finished product overlayed on top of it.  As such, changes you make to data in an image is really happening
    #in yet another delta layer on top of the rest.  This layer is considered temporary and really only something
    #you use if you're building your own image from an existing one as a base.  Any data you need to persist
    #should be stored in a Docker volume.  Docker volums can either be named storage locations that can be defined
    #here in the compose file, or bind mounts to directories on the host machine both of which you can use
    #to store data that persists between runs of a container and can be shared between multipe containers.
    #see https://docs.docker.com/compose/compose-file/#volumes for more information
    volumes:
      #allows ouroboros to monitor for changes and to read labels
      - /var/run/docker.sock:/var/run/docker.sock ###Comment this line out in Windows
      - /etc/localtime:/etc/localtime:ro



  organizr:
    container_name: organizr
    restart: always
    image: organizr/organizr
    volumes:
      - ./organizr:/config
      - ./shared:/shared
    ports:
      - "8089:80"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - docker

networks:
  docker:
    name: docker

